# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Set up the prompt

autoload -Uz promptinit
promptinit
prompt adam1

setopt histignorealldups sharehistory

# Use emacs keybindings even if our EDITOR is set to vi
bindkey -e

# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history

# Use modern completion system
autoload -Uz compinit
compinit

zstyle ':completion:*' auto-description 'specify: %d'
zstyle ':completion:*' completer _expand _complete _correct _approximate
zstyle ':completion:*' format 'Completing %d'
zstyle ':completion:*' group-name ''
zstyle ':completion:*' menu select=2
eval "$(dircolors -b)"
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' list-colors ''
zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
zstyle ':completion:*' menu select=long
zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
zstyle ':completion:*' use-compctl false
zstyle ':completion:*' verbose true

zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

setopt HIST_IGNORE_DUPS           # $BA0$H=EJ#$9$k9T$O5-O?$7$J$$(B
setopt HIST_IGNORE_ALL_DUPS       # $BMzNrCf$N=EJ#9T$r%U%!%$%k5-O?A0$KL5$/$9(B
setopt HIST_IGNORE_SPACE          # $B9TF,$,%9%Z!<%9$N%3%^%s%I$O5-O?$7$J$$(B
setopt HIST_FIND_NO_DUPS          # $BMzNr8!:wCf!"(B($BO"B3$7$F$J$/$H$b(B)$B=EJ#$rHt$P$9(B
setopt HIST_REDUCE_BLANKS         # $BM>J,$J6uGr$O5M$a$F5-O?(B
setopt HIST_NO_STORE              # histroy$B%3%^%s%I$O5-O?$7$J$$(B

fssh() {
    local sshLoginHost
    sshLoginHost=`cat ~/.ssh/config | grep -i ^host | awk '{print $2}' | fzf`

    if [ "$sshLoginHost" = "" ]; then
        # ex) Ctrl-C.
        return 1
    fi

    ssh ${sshLoginHost}
}

function cd_ghq_list() {
    local destination_dir="$(ghq list | fzf)"
    if [ -n "$destination_dir" ]; then
        local ghq_root="$(ghq root)"
        BUFFER="cd  $ghq_root/$destination_dir"
        zle accept-line
    fi
    zle clear-screen
}
zle -N cd_ghq_list
bindkey '^]' cd_ghq_list

alias dc='docker compose'
alias gq='ghq'
alias composer='docker run --rm -it -v $(pwd):/app -u $(id -u):$(id -g) composer/composer'
alias oas='docker run --rm -v "$(pwd):/local" openapitools/openapi-generator-cli'

source /usr/share/doc/fzf/examples/key-bindings.zsh

eval "$(gh completion -s zsh)"

### Added by Zinit's installer
if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}â–“â–’â–‘ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})â€¦%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}â–“â–’â–‘ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}â–“â–’â–‘ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zinit-zsh/z-a-rust \
    zinit-zsh/z-a-as-monitor \
    zinit-zsh/z-a-patch-dl \
    zinit-zsh/z-a-bin-gem-node

zinit ice depth=1; zinit light romkatv/powerlevel10k

### End of Zinit's installer chunk

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh
